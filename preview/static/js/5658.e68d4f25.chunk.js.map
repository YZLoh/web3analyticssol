{"version":3,"file":"static/js/5658.e68d4f25.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","app/basic-ui/Modals.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nfunction Modals () {\n  const [smShow, setSmShow] = useState(false);\n  const [mdShow, setMdShow] = useState(false);\n  const [lgShow, setLgShow] = useState(false);\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\"> Modals </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Modals</li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Large Modal</h4>\n              <p className=\"card-description\">Large sized modal with max-width set to <code>90%</code></p>\n                {/* Dummy Modal Starts  */}\n              <Modal.Dialog size=\"lg\">\n                <Modal.Header closeButton>\n                  <Modal.Title>Modal title</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <p>Modal body text goes here.</p>\n                </Modal.Body>\n\n                <Modal.Footer className=\"flex-wrap\">\n                  <Button variant=\"success m-2\">Submit</Button>\n                  <Button variant=\"light m-2\">Cancel</Button>\n                </Modal.Footer>\n              </Modal.Dialog>\n              {/* Dummy Modal Ends */}\n              {/* Modal starts */}\n              <div className=\"text-center\">\n                <Button onClick={() => setLgShow(true)} className=\"btn-sm\">Large modal<i className=\"mdi mdi-arrow-right-circle-outline ms-1\"></i></Button>\n              </div>\n              <Modal\n                size=\"lg\"\n                show={lgShow}\n                onHide={() => setLgShow(false)}\n                aria-labelledby=\"example-modal-sizes-title-lg\"\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Modal title</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <p>Modal body text goes here.</p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button variant=\"success m-2\" onClick={() => setLgShow(false)}>Submit</Button>\n                  <Button variant=\"light mb-\" onClick={() => setLgShow(false)}>Cancel</Button>\n                </Modal.Footer>\n              </Modal>\n              {/* Modal Ends */}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Medium Modal</h4>\n              <p className=\"card-description\">Normal modal with default bootstrap settings</p>\n                {/* Dummy Modal Starts  */}\n                <Modal.Dialog>\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <p>Modal body text goes here.</p>\n                  </Modal.Body>\n\n                  <Modal.Footer className=\"flex-wrap\">\n                    <Button variant=\"success m-2\">Submit</Button>\n                    <Button variant=\"light m-2\">Cancel</Button>\n                  </Modal.Footer>\n                </Modal.Dialog>\n                {/* Dummy Modal Ends */}\n                {/* Modal starts */}\n                <div className=\"text-center\">\n                  <Button onClick={() => setMdShow(true)} className=\"btn-sm\">Medium modal<i className=\"mdi mdi-arrow-right-circle-outline ms-1\"></i></Button>\n                </div>\n                <Modal\n                  show={mdShow}\n                  onHide={() => setMdShow(false)}\n                  aria-labelledby=\"example-modal-sizes-title-md\"\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <p>Modal body text goes here.</p>\n                  </Modal.Body>\n\n                  <Modal.Footer className=\"fleex-wrap\">\n                    <Button variant=\"success m-2\" onClick={() => setMdShow(false)}>Submit</Button>\n                    <Button variant=\"light m-2\" onClick={() => setMdShow(false)}>Cancel</Button>\n                  </Modal.Footer>\n                </Modal>\n              {/* Modal Ends */}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Small Modal</h4>\n              <p className=\"card-description\">Small modal with max-width set to 300px</p>\n                {/* Dummy Modal Starts  */}\n                <Modal.Dialog size=\"sm\">\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <p>Modal body text goes here.</p>\n                  </Modal.Body>\n\n                  <Modal.Footer className=\"flex-wrap\">\n                    <Button variant=\"success btn-sm m-2\">Submit</Button>\n                    <Button variant=\"light btn-sm m-2\">Cancel</Button>\n                  </Modal.Footer>\n                </Modal.Dialog>\n                {/* Dummy Modal Ends */}\n                {/* Modal starts */}\n                <div className=\"text-center\">\n                  <Button onClick={() => setSmShow(true)} className=\"btn-sm\">Small modal<i className=\"mdi mdi-arrow-right-circle-outline ms-1\"></i></Button>\n                </div>\n                <Modal\n                  size=\"sm\"\n                  show={smShow}\n                  onHide={() => setSmShow(false)}\n                  aria-labelledby=\"example-modal-sizes-title-sm\"\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <p>Modal body text goes here.</p>\n                  </Modal.Body>\n\n                  <Modal.Footer className=\"flex-wrap\">\n                    <Button variant=\"success btn-sm m-2\" onClick={() => setSmShow(false)}>Submit</Button>\n                    <Button variant=\"light btn-sm m-2\" onClick={() => setSmShow(false)}>Cancel</Button>\n                  </Modal.Footer>\n                </Modal>\n              {/* Modal Ends */}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Modals\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","handleContainerOverflow","isRTL","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","resolveContainerRef","ref","_ref","nodeType","manager","_excluded","useModalManager","provided","useWindow","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","className","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","element","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","qsa","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","defaultProps","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","smShow","setSmShow","mdShow","setMdShow","lgShow","setLgShow","href","event","Button","propTypes","PropTypes","type","p"],"sourceRoot":""}