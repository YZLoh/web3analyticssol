{"version":3,"file":"static/js/2995.be6636b5.chunk.js","mappings":"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","sources":["app/apps/TodoList.js"],"sourcesContent":["import React, { Component } from 'react'\n\nexport class TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            todos: [\n                {\n                    id: 1,\n                    task: 'Pick up kids from school',\n                    isCompleted: false\n                },\n                {\n                    id: 2,\n                    task: 'Prepare for presentation',\n                    isCompleted: true\n                },\n                {\n                    id: 3,\n                    task: 'Print Statements',\n                    isCompleted: false\n                },\n                {\n                    id: 4,\n                    task: 'Create invoice',\n                    isCompleted: false\n                },\n                {\n                    id: 5,\n                    task: 'Call John',\n                    isCompleted: true\n                },\n                {\n                    id: 6,\n                    task: 'Meeting with Alisa',\n                    isCompleted: false\n                }\n            ],\n            inputValue: '',\n        }\n\n        this.statusChangedHandler = this.statusChangedHandler.bind(this);\n        this.addTodo = this.addTodo.bind(this);\n        this.removeTodo = this.removeTodo.bind(this);\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    }\n\n    statusChangedHandler(event, id) {\n        const todo = {...this.state.todos[id]};\n        todo.isCompleted = event.target.checked;\n\n        const todos = [...this.state.todos];\n        todos[id] = todo;\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    addTodo (event) {\n        event.preventDefault();\n\n        const todos = [...this.state.todos];\n        todos.unshift({\n            id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n            task: this.state.inputValue,\n            isCompleted: false\n            \n        })\n\n        this.setState({\n            todos: todos,\n            inputValue: ''\n        })\n    }\n\n    removeTodo (index) {\n        const todos = [...this.state.todos];\n        todos.splice(index, 1);\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    inputChangeHandler(event) {\n        this.setState({\n            inputValue: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Todo List\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={evt =>evt.preventDefault()}>Apps</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Todo List</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Todo List</h4>\n                                <form  className=\"add-items d-flex\" onSubmit={this.addTodo}>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control h-auto\" \n                                        placeholder=\"What do you need to do today?\" \n                                        value={this.state.inputValue} \n                                        onChange={this.inputChangeHandler}\n                                        required />\n                                    <button type=\"submit\" className=\"btn btn-gradient-primary font-weight-bold\">Add</button>\n                                </form>\n                                <div className=\"list-wrapper\">\n                                    <ul className=\"d-flex flex-column todo-list\">\n                                        {this.state.todos.map((todo, index) =>{\n                                            return <ListItem \n                                            isCompleted={todo.isCompleted}\n                                            changed={(event) => this.statusChangedHandler(event, index)}\n                                            key={todo.id}\n                                            remove={() => this.removeTodo(index) }\n                                            >{todo.task}</ListItem>\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst ListItem = (props) => {\n    \n    return (\n        <li className={(props.isCompleted ? 'completed' : null)}>\n            <div className=\"form-check\">\n                <label htmlFor=\"\" className=\"form-check-label\"> \n                    <input className=\"checkbox\" type=\"checkbox\" \n                        checked={props.isCompleted} \n                        onChange={props.changed} \n                        /> {props.children} <i className=\"input-helper\"></i>\n                </label>\n            </div>\n            <i className=\"remove mdi mdi-close-circle-outline\" onClick={props.remove}></i>\n        </li>\n    )\n};\n\nexport default TodoList\n"],"names":["TodoList","props","state","todos","id","task","isCompleted","inputValue","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","event","todo","this","target","checked","setState","preventDefault","unshift","length","index","splice","value","className","href","onClick","evt","onSubmit","type","placeholder","onChange","required","map","ListItem","changed","remove","Component","htmlFor","children"],"sourceRoot":""}