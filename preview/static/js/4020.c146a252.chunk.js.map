{"version":3,"file":"static/js/4020.c146a252.chunk.js","mappings":"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","sources":["app/apps/KanbanBoard.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Dropdown, ProgressBar } from 'react-bootstrap';\n\nconst initialData = {\n  tasks: {\n    'task-1': {\n      id: 'task-1', \n      name: 'Rebecca young', \n      taskName: 'Server gateway', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face8.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face9.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face10.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'success'\n    },\n    'task-2': {\n      id: 'task-2', \n      name: 'Jacob march', taskName: 'Server gateway', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face23.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face24.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face25.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'info'\n    },\n    'task-3': {\n      id: 'task-3', \n      name: 'Catherine', \n      taskName: 'Software update', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face15.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face16.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face17.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'dark'\n    },\n    'task-4': {\n      id: 'task-4', \n      name: 'Network maintenance', \n      taskName: 'Director', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face14.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face15.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face16.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'danger'\n    },\n    'task-5': {\n      id: 'task-5', \n      name: 'Keto Philip', \n      taskName: 'Attached Preview Icon', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face5.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face6.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face7.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'danger'\n    },\n    'task-6': {\n      id: 'task-6', \n      name: 'Jacob Stephen', \n      taskName: 'UI Design Started', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face5.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face6.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face7.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'info'\n    },\n    'task-7': {\n      id: 'task-7', \n      name: 'March Creg', \n      taskName: 'New IOS Design', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face5.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face6.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face7.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'success'\n    },\n    'task-8': {\n      id: 'task-8', \n      name: 'Peter Beckham', \n      taskName: 'Retail Order', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face5.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face6.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face7.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'secondar'\n    },\n    'task-9': {\n      id: 'task-9', \n      name: 'John Doe', \n      taskName: 'HTML/CSS templates', \n      date: '20 Feb 2019',\n      img1URL:require(\"../../assets/images/faces/face5.jpg\"),\n      img2URL:require(\"../../assets/images/faces/face6.jpg\"),\n      img3URL:require(\"../../assets/images/faces/face7.jpg\"),\n      priority:'important',\n      dueDate:'Due 10 days',\n      progressVariant:'primary'\n    },\n  },\n  columns: {\n    'column-1' : {\n      id: 'column-1',\n      tittle: 'To do',\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4'],\n    },\n    'column-2' : {\n      id: 'column-2',\n      tittle: 'In Progress',\n      taskIds: ['task-5', 'task-6', 'task-7'],\n    },\n    'column-3' : {\n      id: 'column-3',\n      tittle: 'Done',\n      taskIds: ['task-8', 'task-9'],\n    },\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3'],\n\n};\n\nexport class Column extends Component {\n  render() {\n    return (\n      <div className=\"col-md-4\">\n        <div className=\"border board-wrapper p-3\">        \n          <div><h6 className=\"card-title\">{this.props.column.tittle}</h6></div>\n          <Droppable droppableId= {this.props.column.id}>\n            {provided => (\n              <div className=\"kanbanHeight\"\n              ref={provided.innerRef}\n                {...provided.droppableProps}\n                >\n              {this.props.tasks.map ((task, index) => \n                <Task key= {task.id} task={task} index= {index} /> )} \n              {provided.placeholder}\n              </div>\n            )}\n          </Droppable >       \n        </div>\n      </div>\n    )\n  }\n}\nexport class Task extends Component {\n  render() {\n    return ( <Draggable draggableId={this.props.task.id} index={this.props.index}>\n          {(provided) => (\n            <div className=\"mt-2 board-portlet\"\n             {...provided.draggableProps}\n             {...provided.dragHandleProps}\n             ref={provided.innerRef}\n             >\n             <ul id=\"portlet-card-list-1\" className=\"portlet-card-list\">\n                <li className=\"portlet-card\">\n                  <ProgressBar variant={`${this.props.task.progressVariant}`} now={25}/>\n                  <div className=\"d-flex justify-content-between w-100\">\n                    <p className=\"task-date\">{this.props.task.date}</p>\n                    <Dropdown variant=\"p-0\" alignRight>\n                      <Dropdown.Toggle variant=\"dropdown-toggle p-0\">\n                      <i className=\"mdi mdi-dots-vertical\"></i>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item>Edit</Dropdown.Item>\n                        <Dropdown.Item>Delete</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                  <div><h4>{this.props.task.taskName}</h4></div>\n                  <div className=\"image-grouped\">\n                    <img src={this.props.task.img1URL} alt=\"profile\" />\n                    <img src={this.props.task.img2URL} alt=\"profile\" />\n                    <img src={this.props.task.img3URL} alt=\"profile\" />\n                  </div>\n                  <div className=\"d-flex justify-content-between\">\n                    <div className=\"badge badge-inverse-success\">{this.props.task.priority}</div>\n                  <p className=\"due-date\">{this.props.task.dueDate}</p>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          )}\n        </Draggable>\n    )\n  }\n}\n\nexport class KanbanBoard extends Component {\n  state = initialData;\n  onDragEnd = result => {\n    const {destination, source, draggableId} = result;\n    if(!destination) {\n      return;\n    }\n    if (\n      destination.droppableId===source.droppableId && \n      destination.index===source.index\n    ) {\n      return\n    }\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start===finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id] : newColumn,\n        },\n      };\n      \n      this.setState(newState);   \n      return;   \n    }\n\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n    \n    const newState = {\n      ...this.state,\n      columns : {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      }\n    };\n    this.setState(newState);\n  }\n  render() {\n    return (\n    \n      <div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-3\">\n              <div className=\"d-flex flex-column flex-md-row align-items-center flex-wrap\">\n                  <h4 className=\"mb-md-0 mb-4\">Design Board</h4>\n                  <div className=\"wrapper d-none d-lg-flex  align-items-center my-2\">\n                    <div className=\"image-grouped ml-md-4\">\n                      <img src={require(\"../../assets/images/faces/face20.jpg\")} alt=\"profile\" />\n                      <img src={require(\"../../assets/images/faces/face17.jpg\")} alt=\"profile \"/>\n                      <img src={require(\"../../assets/images/faces/face14.jpg\")} alt=\"profile \"/>\n                    </div>\n                    <button type=\"button\" className=\"btn private-btn btn-fw ml-4\"><i className=\"mdi mdi-lock\"></i>Private</button>\n                  </div>\n                  <div className=\"wrapper ml-md-auto  d-none d-lg-flex flex-column flex-md-row kanban-toolbar ml-md-0 my-2\">\n                    <div className=\"d-flex\">\n                      <button type=\"button\" className=\"btn btn-icons private-btn d-none d-lg-block\">\n                        <i className=\"mdi mdi-magnify\"></i>\n                      </button>\n                      <button type=\"button\" className=\"btn btn-icons private-btn d-none d-lg-block\">\n                        <i className=\"mdi mdi-filter-outline\"></i>\n                      </button>\n                      <button type=\"button\" className=\"btn btn-icons private-btn\">\n                        <i className=\"mdi mdi-bell-outline\"></i>\n                      </button>\n                      <button type=\"button\" className=\"btn btn-gradient-primary\">Boards</button>\n                    </div>\n                    <div className=\"d-flex mt-4 mt-md-0\">\n                      <button type=\"button\" className=\"btn btn-gradient-success\">Create New</button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-12 grid-margin\">\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <DragDropContext onDragEnd={this.onDragEnd} onDragStart={this.onDragStart}>  \n                          <div className=\"row\">\n                          {\n                            this.state.columnOrder.map(columnId => {\n                            const column = this.state.columns[columnId];\n                            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n                              //return column.tittle;\n                            return <Column key = {column.id} column={column} tasks={tasks} />;\n                            })\n                          }\n                          </div>\n                        </DragDropContext>                        \n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default KanbanBoard\n\n\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"names":["initialData","tasks","id","name","taskName","date","img1URL","require","img2URL","img3URL","priority","dueDate","progressVariant","columns","tittle","taskIds","columnOrder","Column","className","this","props","column","droppableId","provided","ref","innerRef","droppableProps","map","task","index","Task","placeholder","Component","draggableId","draggableProps","dragHandleProps","variant","now","alignRight","src","alt","KanbanBoard","state","onDragEnd","result","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","setState","newTaskIds","newColumn","type","onDragStart","columnId","taskId","getPercentage","min","max","percentage","Math","round","renderProgressBar","label","visuallyHidden","striped","animated","style","bsPrefix","_jsx","role","classNames","width","children","ProgressBar","React","isChild","useBootstrapPrefix","wrapperProps","child","cloneElement","displayName","defaultProps"],"sourceRoot":""}