{"version":3,"file":"static/js/2480.1952571b.chunk.js","mappings":"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","sources":["app/basic-ui/Accordions.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Accordion} from 'react-bootstrap';\n\nclass Accordions extends Component {\n  render () {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\"> Accordions </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Accordions</li>\n            </ol>\n          </nav>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Default accordion</h4>\n                <p className=\"card-description\">Basic accordion</p>\n                <div className=\"mt-4\">\n                  <Accordion defaultActiveKey=\"0\">\n                    <Accordion.Item eventKey=\"0\">\n                      <Accordion.Header>How can I pay for an order I placed?</Accordion.Header>\n                      <Accordion.Body>\n                        <div className=\"row\">\n                          <div className=\"col-3\">\n                            <img src={require(\"../../assets/images/samples/300x300/10.jpg\")} className=\"mw-100\" alt=\"sample\" />\n                          </div>\n                          <div className=\"col-9\"> You can pay for the product you have purchased using credit cards, debit cards, or via online banking. We also provide cash-on-delivery services. </div>\n                        </div>\n                      </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"1\">\n                      <Accordion.Header>I can’t sign in to my account</Accordion.Header>\n                      <Accordion.Body>\n                        If while signing in to your account you see an error message, you can do the following \n                        <ol className=\"pl-3 mt-4\">\n                          <li>Check your network connection and try again</li>\n                          <li>Make sure your account credentials are correct while signing in</li>\n                          <li>Check whether your account is accessible in your region</li>\n                        </ol>\n                        <br/>\n                        <p className=\"text-success\"><i className=\"ti-alert me-2\"></i>If the problem persists, you can contact our support. </p>\n                      </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"2\">\n                      <Accordion.Header>Can I add money to the wallet?</Accordion.Header>\n                      <Accordion.Body>\n                        You can add money to the wallet for any future transaction from your bank account using net-banking, or credit/debit card transaction. The money in the wallet can be used for an easier and faster transaction.\n                      </Accordion.Body>\n                    </Accordion.Item>\n                  </Accordion>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Bordered accordions</h4>\n                <p className=\"card-description\">Use class <code>.accordion-bordered</code> for bordered accordions</p>\n                <div className=\"mt-4\">\n                  <Accordion defaultActiveKey=\"0\" className=\"accordion-bordered\">\n                    <Accordion.Item eventKey=\"0\">\n                      <Accordion.Header>How can I pay for an order I placed?</Accordion.Header>\n                      <Accordion.Body>\n                      You can pay for the product you have purchased using credit cards, debit cards, or via online banking. We also provide cash-on-delivery services for most of our products. You can also use your account wallet for payment.\n                      </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"1\">\n                      <Accordion.Header>I can’t sign in to my account</Accordion.Header>\n                      <Accordion.Body>\n                        <p> If while signing in to your account you see an error message, you can do the following </p>\n                          <ol className=\"pl-3\">\n                            <li>Check your network connection and try again</li>\n                            <li>Make sure your account credentials are correct while signing in</li>\n                            <li>Check whether your account is accessible in your region</li>\n                          </ol>\n                          <br/>\n                          <i className=\"ti-alert me-2\"></i>If the problem persists, you can contact our support.\n                      </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"2\">\n                      <Accordion.Header>How can I deactivate my account?</Accordion.Header>\n                      <Accordion.Body>\n                        If you wish to deactivate your account, you can go to the Settings page of your account. Click on Account Settings and then click on Deactivate. You can join again as and when you wish.\n                      </Accordion.Body>\n                    </Accordion.Item>\n                  </Accordion>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Solid content accordion</h4>\n                <p className=\"card-description\">Use class <code>.accordion-solid-content</code> for basic accordion</p>\n                <div className=\"mt-4\">\n                  <Accordion defaultActiveKey=\"0\"  className=\"accordion-solid-content\">\n                    <Accordion.Item eventKey=\"0\">\n                      <Accordion.Header>How can I pay for an order I placed?</Accordion.Header>\n                      <Accordion.Body>\n                        <div className=\"row\">\n                          <div className=\"col-3\">\n                            <img src={require(\"../../assets/images/samples/300x300/10.jpg\")} className=\"mw-100\" alt=\"sample\" />\n                          </div>\n                          <div className=\"col-9\"> You can pay for the product you have purchased using credit cards, debit cards, or via online banking. We also provide cash-on-delivery services. </div>\n                        </div>\n                      </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"1\">\n                      <Accordion.Header>I can’t sign in to my account</Accordion.Header>\n                      <Accordion.Body>\n                        If while signing in to your account you see an error message, you can do the following \n                          <ol className=\"pl-3 mt-4\">\n                            <li>Check your network connection and try again</li>\n                            <li>Make sure your account credentials are correct while signing in</li>\n                            <li>Check whether your account is accessible in your region</li>\n                          </ol>\n                          <br/>\n                          <p className=\"text-success\"><i className=\"ti-alert me-2\"></i>If the problem persists, you can contact our support. </p>\n                      </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"2\">\n                      <Accordion.Header>Can I add money to the wallet?</Accordion.Header>\n                      <Accordion.Body>\n                        You can add money to the wallet for any future transaction from your bank account using net-banking, or credit/debit card transaction. The money in the wallet can be used for an easier and faster transaction.\n                      </Accordion.Body>\n                    </Accordion.Item>\n                  </Accordion>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Multi colored accordion</h4>\n                <p className=\"card-description\">Use class <code>.accordion-multi-colored</code> for basic accordion</p>\n                <div className=\"mt-4\">\n                  <Accordion defaultActiveKey=\"0\" className=\"accordion-multi-colored\">\n                    <Accordion.Item eventKey=\"0\">\n                      <Accordion.Header>How can I pay for an order I placed?</Accordion.Header>\n                      <Accordion.Body>\n                        <div className=\"row\">\n                          <div className=\"col-3\">\n                            <img src={require(\"../../assets/images/samples/300x300/10.jpg\")} className=\"mw-100\" alt=\"sample\" />\n                          </div>\n                          <div className=\"col-9\"> You can pay for the product you have purchased using credit cards, debit cards, or via online banking. We also provide cash-on-delivery services. </div>\n                        </div>\n                      </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"1\">\n                      <Accordion.Header>I can’t sign in to my account</Accordion.Header>\n                      <Accordion.Body>\n                        If while signing in to your account you see an error message, you can do the following \n                          <ol className=\"pl-3 mt-4\">\n                            <li>Check your network connection and try again</li>\n                            <li>Make sure your account credentials are correct while signing in</li>\n                            <li>Check whether your account is accessible in your region</li>\n                          </ol>\n                          <br/>\n                          <p className=\"text-success\"><i className=\"ti-alert me-2\"></i>If the problem persists, you can contact our support. </p>\n                      </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"2\">\n                      <Accordion.Header>Can I add money to the wallet?</Accordion.Header>\n                      <Accordion.Body>\n                        You can add money to the wallet for any future transaction from your bank account using net-banking, or credit/debit card transaction. The money in the wallet can be used for an easier and faster transaction.\n                      </Accordion.Body>\n                    </Accordion.Item>\n                  </Accordion>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Accordions;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * This component accepts all of [`Collapse`'s props](/utilities/transitions/#collapse-props).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});"],"names":["Accordions","className","href","onClick","event","preventDefault","defaultActiveKey","eventKey","src","require","alt","Component","funcs","filter","f","reduce","acc","Error","args","apply","this","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","React","ref","onEnter","onEntering","onEntered","onExit","onExiting","children","props","computedDimension","handleEnter","useMemo","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","_jsx","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","state","innerProps","classNames","isAccordionItemSelected","activeEventKey","Array","isArray","includes","context","displayName","AccordionCollapse","as","bsPrefix","useContext","AccordionContext","useBootstrapPrefix","AccordionBody","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","k","useAccordionButton","type","AccordionHeader","AccordionItem","contextValue","Provider","Accordion","useUncontrolled","activeKey","flush","controlledProps","prefix","Object","assign","Button","Item","Header","Body"],"sourceRoot":""}