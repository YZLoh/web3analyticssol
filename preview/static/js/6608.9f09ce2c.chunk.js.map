{"version":3,"file":"static/js/6608.9f09ce2c.chunk.js","mappings":"0PAYMA,EACJ,qFAEWC,EAAb,0IACE,WACE,OACE,4BACE,iBAAKC,UAAU,cAAf,WACE,eAAIA,UAAU,aAAd,kCACA,gBAAK,aAAW,aAAhB,UACE,gBAAIA,UAAU,aAAd,WACE,eAAIA,UAAU,kBAAd,UAAgC,cAAGC,KAAK,KAAKC,QAAS,SAAAC,GAAK,OAAIA,EAAMC,gBAAV,EAA3B,qBAChC,eAAIJ,UAAU,yBAAyB,eAAa,OAApD,kCAIN,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,oCAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,4BACA,gBAAKA,UAAU,gBAAf,UACE,SAAC,EAAAK,cAAD,WACE,SAAC,EAAAC,cAAD,CAAeC,KAAM,EAArB,UACE,SAAC,EAAAC,YAAD,CAAaC,UAAWX,EAAxB,SACG,qBAAGY,YACUC,KAAI,SAAAC,GAAG,OACjB,SAAC,EAAAC,UAAD,CAA4BJ,UAAWG,GAAvBA,EAAIE,OADH,GADpB,kBAYf,gBAAKd,UAAU,oCAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,qBACA,gBAAKA,UAAU,gBAAf,UACE,UAAC,EAAAK,cAAD,CAAeU,iBAAkB,CAAEC,MAAO,KAA1C,WACE,SAAC,EAAAC,OAAD,CAAQC,OAAO,UAAUC,YAAa,KACtC,SAAC,EAAAX,YAAD,CAAaC,UAAWX,EAAxB,SACG,qBAAGY,YACUC,KAAI,SAAAC,GAAG,OAAI,SAAC,EAAAC,UAAD,CAA4BJ,UAAWG,GAAvBA,EAAIE,OAAxB,GADpB,oBAUf,iBAAKd,UAAU,MAAf,WACE,gBAAKA,UAAU,oCAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,wBACA,gBAAKA,UAAU,gBAAf,UACA,UAAC,EAAAK,cAAD,CAAeU,iBAAkB,CAAEC,MAAO,KAA1C,WACE,SAAC,EAAAI,UAAD,CAAWF,OAAO,UAClB,SAAC,EAAAV,YAAD,CAAaC,UAAWX,EAAxB,SACG,qBAAGY,YACUC,KAAI,SAAAC,GAAG,OAAI,SAAC,EAAAC,UAAD,CAA4BJ,UAAWG,GAAvBA,EAAIE,OAAxB,GADpB,iBASX,gBAAKd,UAAU,oCAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,0BACA,iBAAKA,UAAU,gBAAf,WACE,SAAC,EAAAK,cAAD,WACE,SAAC,EAAAG,YAAD,CAAaC,UAAWX,EAAxB,SACG,qBAAGY,YACUC,KAAI,SAAAC,GAAG,OAAI,SAAC,EAAAC,UAAD,CAA4BJ,UAAWG,GAAvBA,EAAIE,OAAxB,GADpB,MAHP,kBAaR,iBAAKd,UAAU,MAAf,WACE,gBAAKA,UAAU,oCAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,qBACA,gBAAKA,UAAU,gBAAf,UACE,UAAC,EAAAK,cAAD,CAAegB,WAAW,YAA1B,WACE,SAAC,EAAAb,YAAD,CAAaC,UAAWX,EAAxB,SACG,qBAAGY,YACUC,KAAI,SAAAC,GAAG,OACjB,SAAC,EAAAC,UAAD,CAEEJ,UAAWG,EACXU,KAAK,OACLJ,OAAO,QAHFN,EAAIE,OAFM,GADpB,KAWH,SAAC,EAAAS,OAAD,CAAQC,YAAa,EAAE,OAAQ,SAA/B,UACE,mBAAQC,EAAG,EAAGH,KAAK,wBAO/B,gBAAKtB,UAAU,oCAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,mBACA,gBAAKA,UAAU,gBAAf,UACE,UAAC,EAAAK,cAAD,CACEgB,WAAW,gBACXN,iBAAkB,CAChBC,MAAO,IACPU,OAAQ,EAAE,GAAI,KAJlB,WAOE,SAAC,EAAAN,UAAD,CAAWF,OAAO,UAClB,SAAC,EAAAV,YAAD,CACEC,UAAWX,EACXwB,KAAK,UACLJ,OAAO,UACPC,YAAa,GAJf,SAMG,qBAAGT,YACUC,KAAI,SAAAC,GAAG,OAAI,SAAC,EAAAC,UAAD,CAA4BJ,UAAWG,GAAvBA,EAAIE,OAAxB,GADpB,KAIH,SAAC,EAAAa,KAAD,CACEC,KAAM,CAAC,OAAQ,SACfC,GAAI,EAAE,OAAQ,SACdX,OAAO,UACPC,YAAa,EACbW,cAAc,2BAUjC,KAxJH,GAA+BC,EAAAA,WA2J/B,W","sources":["app/maps/SimpleMap.js"],"sourcesContent":["import React, { Component } from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Sphere,\n  Graticule,\n  Marker,\n  Line\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\";\n\nexport class SimpleMap extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\"> React Simple Maps </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Maps</a></li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Simple Maps</li>\n            </ol>\n          </nav>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">ZoomableGroup</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap>\n                    <ZoomableGroup zoom={1}>\n                      <Geographies geography={geoUrl}>\n                        {({ geographies }) =>\n                          geographies.map(geo => (\n                            <Geography key={geo.rsmKey} geography={geo} />\n                          ))\n                        }\n                      </Geographies>\n                    </ZoomableGroup>\n                  </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Sphere</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap projectionConfig={{ scale: 147 }}>\n                    <Sphere stroke=\"#FF5533\" strokeWidth={2} />\n                    <Geographies geography={geoUrl}>\n                      {({ geographies }) =>\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n                      }\n                    </Geographies>\n                  </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Graticule</h4>\n                <div className=\"map-dimension\">\n                <ComposableMap projectionConfig={{ scale: 147 }}>\n                  <Graticule stroke=\"#F53\" />\n                  <Geographies geography={geoUrl}>\n                    {({ geographies }) =>\n                      geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n                    }\n                  </Geographies>\n                </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Geographies</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap>\n                    <Geographies geography={geoUrl}>\n                      {({ geographies }) =>\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n                      }\n                    </Geographies>\n                  </ComposableMap>`\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Marker</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap projection=\"geoAlbers\">\n                    <Geographies geography={geoUrl}>\n                      {({ geographies }) =>\n                        geographies.map(geo => (\n                          <Geography\n                            key={geo.rsmKey}\n                            geography={geo}\n                            fill=\"#DDD\"\n                            stroke=\"#FFF\"\n                          />\n                        ))\n                      }\n                    </Geographies>\n                    <Marker coordinates={[-74.006, 40.7128]}>\n                      <circle r={8} fill=\"#F53\" />\n                    </Marker>\n                  </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Line</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap\n                    projection=\"geoEqualEarth\"\n                    projectionConfig={{\n                      scale: 420,\n                      center: [-40, 30]\n                    }}\n                  >\n                    <Graticule stroke=\"#DDD\" />\n                    <Geographies\n                      geography={geoUrl}\n                      fill=\"#D6D6DA\"\n                      stroke=\"#FFFFFF\"\n                      strokeWidth={0.5}\n                    >\n                      {({ geographies }) =>\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n                      }\n                    </Geographies>\n                    <Line\n                      from={[2.3522, 48.8566]}\n                      to={[-74.006, 40.7128]}\n                      stroke=\"#FF5533\"\n                      strokeWidth={4}\n                      strokeLinecap=\"round\"\n                    />\n                  </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SimpleMap\n"],"names":["geoUrl","SimpleMap","className","href","onClick","event","preventDefault","ComposableMap","ZoomableGroup","zoom","Geographies","geography","geographies","map","geo","Geography","rsmKey","projectionConfig","scale","Sphere","stroke","strokeWidth","Graticule","projection","fill","Marker","coordinates","r","center","Line","from","to","strokeLinecap","Component"],"sourceRoot":""}