{"version":3,"file":"static/js/1346.f20b57f2.chunk.js","mappings":"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","sources":["app/advanced-ui/Dragula.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst initialData = {\n  tasks: {\n    'task-1': {\n      id: 'task-1', \n      name: 'Rebecca young', \n      designation: 'Software engineer', \n      imgURL: require(\"../../assets/images/faces/face1.jpg\")\n    },\n    'task-2': {\n      id: 'task-2', \n      name: 'Jacob march', \n      designation: 'UI developer', \n      imgURL: require(\"../../assets/images/faces/face2.jpg\")\n    },\n    'task-3': {\n      id: 'task-3', \n      name: 'Catherine', \n      designation: 'Digital Marketer', \n      imgURL: require(\"../../assets/images/faces/face3.jpg\")\n    },\n    'task-4': {\n      id: 'task-4', \n      name: 'Thomas Cook', \n      designation: 'Director', \n      imgURL: require(\"../../assets/images/faces/face4.jpg\")\n    },\n    'task-5': {\n      id: 'task-5', \n      name: 'Keto Philip', \n      designation: 'Software Tester', \n      imgURL: require(\"../../assets/images/faces/face5.jpg\")\n    },\n    'task-6': {\n      id: 'task-6', \n      name: 'Jacob Stephen', \n      designation: 'UI Developer', \n      imgURL: require(\"../../assets/images/faces/face6.jpg\")\n    },\n    'task-7': {\n      id: 'task-7', \n      name: 'March Creg', \n      designation: 'Technical Support Engineer', \n      imgURL: require(\"../../assets/images/faces/face7.jpg\")\n    },\n    'task-8': {\n      id: 'task-8', \n      name: 'Peter Beckham', \n      designation: 'UI Developer', \n      imgURL: require(\"../../assets/images/faces/face8.jpg\")\n    },\n    'task-9': {\n      id: 'task-9', \n      name: 'John Doe', \n      designation: 'UI Designer', \n      imgURL: require(\"../../assets/images/faces/face9.jpg\")\n    },\n    'task-10': {\n      id: 'task-10', \n      name: 'Williamson', \n      designation: 'Technical Support Engineer', \n      imgURL: require(\"../../assets/images/faces/face10.jpg\")\n    },\n  },\n  columns: {\n    'column-1' : {\n      id: 'column-1',\n      tittle: 'TEAM A',\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4','task-5'],\n    },\n    'column-2' : {\n      id: 'column-2',\n      tittle: 'TEAM B',\n      taskIds: ['task-6', 'task-7', 'task-8', 'task-9', 'task-10'],\n    },\n  },\n  columnOrder: ['column-1', 'column-2'],\n\n};\n\nexport class Column extends Component {\n  render() {\n    return (\n      <div className=\"border p-4 col-sm-6\">        \n        <div><h6 className=\"card-title\">{this.props.column.tittle}</h6></div>\n        <Droppable droppableId= {this.props.column.id}>\n          {provided => (\n            <div className=\"kanbanHeight\"\n            ref={provided.innerRef}\n              {...provided.droppableProps}\n              >\n            {this.props.tasks.map ((task, index) => \n              <Task key= {task.id} task={task} index= {index} /> )} \n            {provided.placeholder}\n            </div>\n          )}\n        </Droppable >       \n      </div>\n    )\n  }\n}\nexport class Task extends Component {\n  render() {\n    return ( <Draggable draggableId={this.props.task.id} index={this.props.index}>\n          {(provided) => (\n            <div className=\"mt-1 board-portlet\"\n             {...provided.draggableProps}\n             {...provided.dragHandleProps}\n             ref={provided.innerRef}\n             >\n             <div className=\"card-body p-3 bg-dark\">\n                <div className=\"media\">\n                  <div className=\"media-body\">\n                    <div className=\"d-flex\">\n                      <img src={this.props.task.imgURL} alt=\"profile\" className=\"img-sm me-3 rounded-circle\"/>\n                      <div>\n                        <h6 className=\"mb-1\">{this.props.task.name}</h6>\n                        <p className=\"mb-0 text-muted\"> {this.props.task.designation} </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </Draggable>\n    )\n  }\n}\n\nexport class Dragula extends Component {\n  state = initialData;\n  onDragEnd = result => {\n    const {destination, source, draggableId} = result;\n    if(!destination) {\n      return;\n    }\n    if (\n      destination.droppableId===source.droppableId && \n      destination.index===source.index\n    ) {\n      return\n    }\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start===finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id] : newColumn,\n        },\n      };\n      \n      this.setState(newState);   \n      return;   \n    }\n\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n    \n    const newState = {\n      ...this.state,\n      columns : {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      }\n    };\n    this.setState(newState);\n  }\n  render() {\n    return (\n    \n      <div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-3\">\n              <div className=\"d-flex flex-column flex-md-row align-items-center\">\n                  <h4 className=\"mb-md-0 mb-4\">Design Board</h4>\n                  <div className=\"wrapper d-flex align-items-center\">\n                    <div className=\"image-grouped ml-md-4\">\n                      <img src={require(\"../../assets/images/faces/face20.jpg\")} alt=\"profile\" />\n                      <img src={require(\"../../assets/images/faces/face17.jpg\")} alt=\"profile \"/>\n                      <img src={require(\"../../assets/images/faces/face14.jpg\")} alt=\"profile \"/>\n                    </div>\n                    <button type=\"button\" className=\"btn private-btn btn-fw ml-4\"><i className=\"mdi mdi-lock\"></i>Private</button>\n                  </div>\n                  <div className=\"wrapper ml-md-auto d-flex flex-column flex-md-row kanban-toolbar ml-n2 ml-md-0 mt-4 mt-md-0\">\n                    <div className=\"d-flex\">\n                      <button type=\"button\" className=\"btn btn-icons private-btn d-none d-lg-block\">\n                        <i className=\"mdi mdi-magnify\"></i>\n                      </button>\n                      <button type=\"button\" className=\"btn btn-icons private-btn d-none d-lg-block\">\n                        <i className=\"mdi mdi-filter-outline\"></i>\n                      </button>\n                      <button type=\"button\" className=\"btn btn-icons private-btn\">\n                        <i className=\"mdi mdi-bell-outline\"></i>\n                      </button>\n                      <button type=\"button\" className=\"btn btn-gradient-primary\">Boards</button>\n                    </div>\n                    <div className=\"d-flex mt-4 mt-md-0\">\n                      <button type=\"button\" className=\"btn btn-gradient-success\">Create New</button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-12 grid-margin\">\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <DragDropContext onDragEnd={this.onDragEnd} onDragStart={this.onDragStart}>  \n                          <div className=\"row\">\n                          {\n                            this.state.columnOrder.map(columnId => {\n                            const column = this.state.columns[columnId];\n                            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n                              //return column.tittle;\n                            return <Column key = {column.id} column={column} tasks={tasks} />;\n                            })\n                          }\n                          </div>\n                        </DragDropContext>                        \n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Dragula\n\n\n"],"names":["initialData","tasks","id","name","designation","imgURL","require","columns","tittle","taskIds","columnOrder","Column","className","this","props","column","droppableId","provided","ref","innerRef","droppableProps","map","task","index","Task","placeholder","Component","draggableId","draggableProps","dragHandleProps","src","alt","Dragula","state","onDragEnd","result","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","setState","newTaskIds","newColumn","type","onDragStart","columnId","taskId"],"sourceRoot":""}